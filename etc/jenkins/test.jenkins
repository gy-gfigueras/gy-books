pipeline {
  agent any

  environment {
    WORKSPACE_DIR = 'WingWords'
  }

  stages {
    stage('Prepare Workspace') {
      steps {
        script {
          if (fileExists(WORKSPACE_DIR)) {
            echo "WingWords directory already exists, cleaning..."
            dir(WORKSPACE_DIR) {
              sh '''
              rm -rf .nvm with-node.sh
              '''
            }
          } else {
            echo "Creating WingWords directory..."
            sh "mkdir -p $WORKSPACE_DIR"
          }
        }
      }
    }

    stage('Install Node') {
        steps {
            dir(WORKSPACE_DIR) {
              sh '''
                  export NVM_DIR="$WORKSPACE/.nvm"
                  mkdir -p "$NVM_DIR"
                  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                    # Limpiar versiÃ³n previa de Node.js para evitar binarios corruptos
                    rm -rf "$NVM_DIR/versions/node/v18.20.8"
                  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                  nvm install 18

                  echo '#!/bin/bash' > with-node.sh
                  echo 'export NVM_DIR="$WORKSPACE/.nvm"' >> with-node.sh
                  echo '[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"' >> with-node.sh
                  echo 'nvm use 18' >> with-node.sh
                  echo '"$@"' >> with-node.sh
                  chmod +x with-node.sh
              '''
            }
        }
    }

    stage('Install Dependencies') {
      steps {
        dir(WORKSPACE_DIR) {
          sh './with-node.sh npm install'
        }
      }
    }

    stage('Run Tests') {
      steps {
        dir(WORKSPACE_DIR) {
          sh './with-node.sh npm run test'
        }
      }
    }
  }
}
